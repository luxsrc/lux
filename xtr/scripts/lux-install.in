#!/bin/sh
#
# Copyright (C) 2009,2011 Chi-kwan Chan
# Copyright (C) 2009 Harvard-Smithsonian Center for Astrophysics
# Copyright (C) 2011 Nordic Institute for Theoretical Physics
#
# This file is part of lux.
#
# lux is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# lux is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with lux.  If not, see <http://www.gnu.org/licenses/>.

#==============================================================================
# Separate the argument list "$@" into input module array "$ina" and
# installation directory "$dir"
while test "$#" -gt 0; do
	a="$1"
	shift
	case "$a" in
		"-i")	dir="$1"; shift;;
		*)	ina+=("$a");;
	esac
done

# Place all "*.la" files to "$mod"; abort if any file does not exist
# or has unknown extension
for i in "${ina[@]}"; do
	if test -f "$i"; then
		case "$i" in
			*.la)	mod+=("$i");;
			*)	echo "Invalid module \"$i\"; ABORT"
				exit 1
				;;
		esac
	else
		echo "Input module \"$i\" not found; ABORT"
		exit 1
	fi
done

# Obtain a sorted list of unique input file(s); exit if no input file
if test ${#mod} -eq 0; then
	echo "No module is specified; EXIT"
	exit 0
else
	mod=($(ls "${mod[@]}" | sort | uniq))
fi

# Use absolute path
if test "x${dir::1}" != "x/"; then
	dir="$PWD/$dir"
	echo "Directory is not absolute path, prepend current directory"
fi

# Finally done parsing arguments; print a summary
printf "Input module name: "
for i in "${!mod[@]}"; do
	if test $i -lt $(expr "${#mod[@]}" - 1); then
		printf "\"${mod[$i]}\", "
	else
		echo   "\"${mod[$i]}\""
	fi
done
echo "Install directory: \"$dir\""

#==============================================================================
# Installation paths
prefix="@prefix@"
exec_prefix="@exec_prefix@"
bindir="@bindir@"
includedir="@includedir@"
libdir="@libdir@"

# Compiler and standard flags
CC="@CC@"
CCLD="${CC}"
DEFS="-DHAVE_CONFIG_H"
DEFAULT_INCLUDES="-I. -I${includedir}"
LIBS="@LIBS@"
DEFAULT_RPATH="-rpath ${libdir}/lux"
OBJEXT="@OBJEXT@"

# Passed in by configure
CPPFLAGS="@CPPFLAGS@"
CFLAGS="@CFLAGS@"
LDFLAGS="@LDFLAGS@"

# Set in Makefile.am
AM_CPPFLAGS=""
AM_CFLAGS=""
AM_LDFLAGS="-no-undefined -export-dynamic -module"

# Helper programs
LIBTOOL="${bindir}/lux-libtool"
INSTALL="@INSTALL@"

# Module specific part of the toolchain
mod_CPPFLAGS="-DLUX_MOD_NAME=${out%.la}"
mod_LIBADD="${libdir}/libux.la"

#==============================================================================
# Install output module to current directory
mkdir -p "$dir"

for m in "${mod[@]}"; do
	echo "Install \"$m\" to \"$dir\""
	${LIBTOOL} --mode=install ${INSTALL} "$m" "$dir"
	status=$?
	if test $status -ne 0; then
		echo "FAILED INSTALLING \"$m\" TO \"$dir\"; ABORT"
		exit $status
	fi
done
